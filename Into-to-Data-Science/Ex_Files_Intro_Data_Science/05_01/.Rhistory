install.packages("randomForest")  # Install randomForest
library(datasets)                 # Load built-in datasets
library(randomForest)             # Load randomForest
head(iris)  # Show first six cases
set.seed(16103)  # Random seed
iris.split <- sample(2, nrow(iris),
replace = TRUE,
prob = c(2/3, 1/3))
iris.train <- iris[iris.split == 1, ]
iris.test  <- iris[iris.split == 2, ]
set.seed(5972)                              # Random seed
iris.rf <- randomForest(Species ~ .,        # Use all var
data = iris.train,  # Data
ntree = 500,        # Num trees
proximity = TRUE)   # Compute prox
print(iris.rf)       # Results with classification table
plot(iris.rf)        # Plot of error by number of trees
importance(iris.rf)  # Table of variable importance
varImpPlot(iris.rf)  # Plot of variable importance
iris.pred <- predict(iris.rf, newdata = iris.test)
table(iris.pred, iris.test$Species)
install.packages("class")  # Install class (if needed)
library(class)             # Load class (has knn function)
library(datasets)          # Load built-in datasets
head(iris)  # Show first six cases
set.seed(16103)  # Random seed
iris.split <- sample(2, nrow(iris),
replace = TRUE,
prob = c(2/3, 1/3))
iris.train <- iris[iris.split == 1, 1:4]
iris.test  <- iris[iris.split == 2, 1:4]
iris.train.labels <- iris[iris.split == 1, 5]
iris.test.labels  <- iris[iris.split == 2, 5]
iris.pred <- knn(train = iris.train,
test = iris.test,
cl = iris.train.labels,  # true class
k = 9)                   # n neighbors
table(iris.pred, iris.test.labels)
iris.pred <- knn(train = iris.train,
test = iris.test,
cl = iris.train.labels,  # true class
k = 19)                   # n neighbors
table(iris.pred, iris.test.labels)
